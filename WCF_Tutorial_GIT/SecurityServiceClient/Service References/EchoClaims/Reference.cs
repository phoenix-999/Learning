//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SecurityServiceClient.EchoClaims {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EchoClaims.IEchoClaims")]
    public interface IEchoClaims {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/Echo", ReplyAction="http://tempuri.org/IEchoClaims/EchoResponse")]
        string Echo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/Echo", ReplyAction="http://tempuri.org/IEchoClaims/EchoResponse")]
        System.Threading.Tasks.Task<string> EchoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/Test", ReplyAction="http://tempuri.org/IEchoClaims/TestResponse")]
        void Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/Test", ReplyAction="http://tempuri.org/IEchoClaims/TestResponse")]
        System.Threading.Tasks.Task TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/SendDataSet", ReplyAction="http://tempuri.org/IEchoClaims/SendDataSetResponse")]
        System.Data.DataSet SendDataSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/SendDataSet", ReplyAction="http://tempuri.org/IEchoClaims/SendDataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SendDataSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/TestFault", ReplyAction="http://tempuri.org/IEchoClaims/TestFaultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.DivideByZeroException), Action="http://tempuri.org/IEchoClaims/TestFaultDivideByZeroExceptionFault", Name="DivideByZeroException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        void TestFault();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEchoClaims/TestFault", ReplyAction="http://tempuri.org/IEchoClaims/TestFaultResponse")]
        System.Threading.Tasks.Task TestFaultAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEchoClaimsChannel : SecurityServiceClient.EchoClaims.IEchoClaims, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoClaimsClient : System.ServiceModel.ClientBase<SecurityServiceClient.EchoClaims.IEchoClaims>, SecurityServiceClient.EchoClaims.IEchoClaims {
        
        public EchoClaimsClient() {
        }
        
        public EchoClaimsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EchoClaimsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoClaimsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoClaimsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Echo() {
            return base.Channel.Echo();
        }
        
        public System.Threading.Tasks.Task<string> EchoAsync() {
            return base.Channel.EchoAsync();
        }
        
        public void Test() {
            base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public System.Data.DataSet SendDataSet() {
            return base.Channel.SendDataSet();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SendDataSetAsync() {
            return base.Channel.SendDataSetAsync();
        }
        
        public void TestFault() {
            base.Channel.TestFault();
        }
        
        public System.Threading.Tasks.Task TestFaultAsync() {
            return base.Channel.TestFaultAsync();
        }
    }
}
